todoに書かれている作業を実行し、完了したアイテムはdoneに移動してください。

# todo: これからやること


# pending: 保留


# done: 既に完了したこと

- 端末の全画面で動作するncurses風アプリを作る。Go言語とtviewを使用する。
- 起動したら、画面中央に"Hello, world"と表示する。
- Escが押されたら終了する。
- "Hello, world"を表示するコードは削除してください。
- プログラムの最初で、カレントディレクトリにGitリポジトリ（`.git`）が存在するか確認し、なければエラー終了、あれば続行します。
- Gitのコミットログを取得してください。このとき、`--all`オプションをつけて、すべてのブランチのコミットログを取得してください。
- コミットログをリスト形式で画面に表示してください。
- 最新のコミットログを「現在選択されているコミット」とし、反転表示してください。
- 現在選択されているコミットは、上下の矢印キーでリスト内を移動できるようにします。
- 画面の上端で↑キー、または、画面の下端で↓キーを押すと、コミットログリストはスクロールし、それまで画面外で表示されていなかった部分が現れるようにします。
- 現在選択されているコミットの行とそれより下のすべてが反転表示されてしまいます。反転表示は１行だけにしてください。
- Page UpキーとPage Downキーに対応して、画面単位でスクロールできるようにしてほしい。
- 日時表示は`yyyy-MM-dd HH:mm:ss`形式にしてください。時差やタイムゾーンの表示は不要です。
- 著者（Author）を表示してください。
- コミットメッセージに改行が含まれるときは、1文字のスペースに置換してください。
- 1コミットの表示は1行とし、テキストが画面の1行に収まらないときは、右端を切り捨ててください。
- `midScreen`は廃止し、`currentCommit`とは別にスクロール位置の変数を用意してください。"選択行がなるべく中央に表示されるように調整する"のではなく、スクロール位置と現在の選択位置を個別に管理し、現在の選択位置が画面範囲内を移動する限り、できるだけスクロールしないようにしてください。
- 起動直後、画面の一部が完全に描画されていないことがあります。起動の最初にできるだけ確実に表示更新が行われるようにしてください。
- Uncommited Changes があるとき、リストの先頭にそのように表示してください。
- リストを表示する高さを`画面の行数`-2としてください。下部2行には将来ステータス等を表示する予定です。
- Enterを押したとき、画面最下行に確認ダイアログ（`[y/n]`）を表示し、`y`のときは当該コミットをチェックアウトする機能を実装してください。ただし、Uncommit Changes のときはこの機能は使えません。
- チェックアウトするとき、ブランチがわかる場合はそのブランチへswitchします。そうでないときは detached HEAD でも構いません。
- リスト表示で、HEADが示す行を黄色で描画してください。
- チェックアウトするコミットとブランチのハッシュが一致するときは`git switch`を実行してブランチを切り替えてください。
- チェックアウトするコミットとブランチのハッシュが一致しないときは`git checkout`を実行して、ブランチ名ではなく、ハッシュ値でチェックアウト（detached head）してください。
